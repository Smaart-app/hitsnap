---
export const prerender = false;

export async function getStaticPaths() {
  return [
    { params: { lang: "el" } },
    { params: { lang: "en" } },
  ];
}

import Layout from '../../layouts/Layout.astro';

const { lang } = Astro.params;
const isGreek = lang === 'el';
---

<Layout title={isGreek ? 'Επικοινωνία — Hitlift' : 'Contact — Hitlift'} lang={lang}>
  <div class="relative isolate min-h-[80vh] flex flex-col justify-center items-center text-center px-6 py-32 overflow-hidden bg-[#f4f3f0]">

    <h1 class="text-4xl font-bold tracking-tight sm:text-5xl relative z-10">
      {isGreek ? 'Επικοινώνησε μαζί μου' : 'Get in touch'}
    </h1>

    <p class="mt-6 text-lg leading-8 text-gray-600 max-w-xl mx-auto relative z-10">
      {isGreek
        ? 'Αν έχεις σχόλια, ιδέες ή απλώς θέλεις να πεις ένα γεια, είμαι εδώ.'
        : 'If you have feedback, ideas, or just want to say hello, I’m all ears.'}
    </p>

    <form id="contact-form" class="mt-10 space-y-4 max-w-md w-full text-left relative z-10">
      <input
        name="name"
        type="text"
        placeholder={isGreek ? 'Όνομα (προαιρετικό)' : 'Name (optional)'}
        class="w-full px-4 py-2 border rounded"
      />
      <input
        name="email"
        type="email"
        required
        placeholder={isGreek ? 'Το email σου' : 'Your email'}
        class="w-full px-4 py-2 border rounded"
      />
      <textarea
        name="message"
        required
        placeholder={isGreek ? 'Το μήνυμά σου' : 'Your message'}
        class="w-full px-4 py-2 border rounded min-h-[120px]"
      ></textarea>
      <button
        type="submit"
        class="bg-[#50c7c2] text-white px-6 py-2 rounded hover:opacity-90 transition"
      >
        {isGreek ? 'Αποστολή' : 'Send'}
      </button>
    </form>

    <p id="response-message" class="mt-4 text-sm text-center"></p>
  </div>

  <script is:client>
    import emailjs from 'emailjs-com';

    const isGreek = window.location.pathname.startsWith('/el');
    const form = document.getElementById('contact-form');
    const responseMsg = document.getElementById('response-message');

    if (!form) {
      console.error('⚠️ Η φόρμα δεν βρέθηκε στο DOM!');
    } else {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();
        responseMsg.textContent = '';

        const formData = new FormData(form);
        const payload = {
          name: formData.get('name') || '',
          email: formData.get('email') || '',
          message: formData.get('message') || ''
        };

        if (!payload.email || !payload.message) {
          responseMsg.textContent = isGreek
            ? '⚠️ Το email και το μήνυμα είναι υποχρεωτικά.'
            : '⚠️ Email and message are required.';
          return;
        }

        try {
          // Supabase insert
          const res = await fetch('/api/contact', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload)
          });

          const data = await res.json();

          if (!res.ok) {
            responseMsg.textContent = isGreek
              ? `⚠️ Σφάλμα Supabase: ${data.error || 'Αποτυχία αποστολής.'}`
              : `⚠️ Supabase error: ${data.error || 'Message failed.'}`;
            return;
          }

          // EmailJS send from browser
          try {
            await emailjs.send(
              'service_rmsqduf',
              'template_ewoapex',
              payload,
              'Tfu4LjZEcoZIh-UtA'
            );

            responseMsg.textContent = isGreek
              ? '📨 Το μήνυμά σου στάλθηκε με επιτυχία!'
              : '📨 Your message was sent successfully!';
            form.reset();
          } catch (emailError) {
            console.error('❌ EmailJS error:', emailError);
            responseMsg.textContent = isGreek
              ? '⚠️ Το μήνυμα αποθηκεύτηκε αλλά δεν στάλθηκε email.'
              : '⚠️ Message saved but email not sent.';
          }

        } catch (err) {
          responseMsg.textContent = isGreek
            ? '⚠️ Πρόβλημα σύνδεσης.'
            : '⚠️ Connection error.';
          console.error('❌ Σφάλμα:', err);
        }
      });
    }
  </script>
</Layout>
