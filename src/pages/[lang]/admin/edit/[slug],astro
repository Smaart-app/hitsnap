---
// src/pages/admin/edit/[slug].astro
import { createAdminClientNoCookies } from "../../../lib/createAdminClientNoCookies.ts";

export const prerender = false;

const { slug } = Astro.params;
const { searchParams } = Astro.url;
const lang = searchParams.get('lang') || 'el';

if (!slug || typeof slug !== "string") {
  return new Response("⛔ Invalid slug", { status: 400 });
}

const supabase = createAdminClientNoCookies();

const { data: article, error } = await supabase
  .from("articles")
  .select("*")
  .eq("slug", slug)
  .single();

if (error || !article) {
  return new Response(`❌ Δεν βρέθηκε άρθρο με slug: ${slug}`, {
    status: 404,
  });
}

const pageTitle = `Επεξεργασία: ${article.title}`;
---

<!DOCTYPE html>
<html lang={lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{pageTitle}</title>
    <script src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
    <script src="https://cdn.tailwindcss.com"></script>
  </head>
  <body class="bg-gray-50">
    <div class="max-w-4xl mx-auto py-8 px-4">
      <div class="bg-white rounded-lg shadow-md p-6">
        <div class="flex justify-between items-center mb-6">
          <h1 class="text-2xl font-bold text-gray-800">Επεξεργασία Άρθρου</h1>
          <div class="flex gap-2">
            <a href={`/${article.lang}/blog/${article.slug}`} class="px-4 py-2 bg-gray-500 text-white rounded hover:bg-gray-600 transition">👁️ Προεπισκόπηση</a>
            <a href="/admin/dashboard" class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition">← Πίσω</a>
          </div>
        </div>

        <form
          id="editForm"
          class="space-y-6"
          x-data="{
            title: '',
            slug: '',
            excerpt: '',
            content: '',
            coverImage: '',
            lang: '',
            published: false,
            saving: false,

            async init() {
              this.title = this.$refs.titleInput.value;
              this.slug = this.$refs.slugInput.value;
              this.excerpt = this.$refs.excerptInput.value;
              this.content = this.$refs.contentInput.value;
              this.coverImage = this.$refs.coverImageInput.value;
              this.lang = this.$refs.langInput.value;
              this.published = this.$refs.publishedInput.checked;
            },

            async saveArticle() {
              this.saving = true;
              try {
                const response = await fetch('/api/update-article', {
                  method: 'POST',
                  headers: { 'Content-Type': 'application/json' },
                  body: JSON.stringify({
                    id: this.$refs.idInput.value,
                    title: this.title,
                    slug: this.slug,
                    excerpt: this.excerpt,
                    content: this.content,
                    cover_image: this.coverImage,
                    lang: this.lang,
                    published: this.published
                  })
                });

                if (response.ok) {
                  alert('✅ Το άρθρο ενημερώθηκε επιτυχώς!');
                  window.location.href = `/${this.lang}/blog/${this.slug}`;
                } else {
                  const error = await response.text();
                  alert(`❌ Σφάλμα: ${error}`);
                }
              } catch (error) {
                console.error('Save error:', error);
                alert('❌ Σφάλμα κατά την αποθήκευση');
              } finally {
                this.saving = false;
              }
            }
          }"
        >
          <input type="hidden" x-ref="idInput" value={article.id} />

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Τίτλος *</label>
            <input type="text" x-ref="titleInput" x-model="title" value={article.title} required class="w-full px-3 py-2 border rounded-md focus:ring-blue-500" />
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Slug *</label>
            <input type="text" x-ref="slugInput" x-model="slug" value={article.slug} required class="w-full px-3 py-2 border rounded-md focus:ring-blue-500" />
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Γλώσσα *</label>
            <select x-ref="langInput" x-model="lang" required class="w-full px-3 py-2 border rounded-md focus:ring-blue-500">
              <option value="el" selected={article.lang === 'el'}>Ελληνικά</option>
              <option value="en" selected={article.lang === 'en'}>English</option>
            </select>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Περίληψη</label>
            <textarea x-ref="excerptInput" x-model="excerpt" rows="3" class="w-full px-3 py-2 border rounded-md focus:ring-blue-500">{article.excerpt || ''}</textarea>
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Cover Image URL</label>
            <input type="url" x-ref="coverImageInput" x-model="coverImage" value={article.cover_image || ''} class="w-full px-3 py-2 border rounded-md focus:ring-blue-500" />
          </div>

          <div>
            <label class="block text-sm font-medium text-gray-700 mb-2">Περιεχόμενο (Markdown) *</label>
            <textarea x-ref="contentInput" x-model="content" rows="20" required class="w-full px-3 py-2 border rounded-md focus:ring-blue-500 font-mono text-sm">{article.content || ''}</textarea>
          </div>

          <div class="flex items-center">
            <input type="checkbox" x-ref="publishedInput" x-model="published" checked={article.published} id="published" class="mr-2" />
            <label for="published" class="text-sm font-medium text-gray-700">Δημοσιευμένο</label>
          </div>

          <div class="flex justify-end gap-4">
            <button type="button" @click="saveArticle()" :disabled="saving" class="px-6 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:opacity-50 transition">
              <span x-show="!saving">💾 Αποθήκευση</span>
              <span x-show="saving">⏳ Αποθήκευση...</span>
            </button>
          </div>
        </form>

        {import.meta.env.DEV && (
          <pre class="mt-10 p-4 bg-gray-100 text-xs text-gray-700 overflow-auto rounded">
            DEBUG: {JSON.stringify(article, null, 2)}
          </pre>
        )}
      </div>
    </div>
  </body>
</html>