---
import Layout from '../../../../layouts/Layout.astro';
import EditorPage from '../../../../components/editor/EditorPage.astro';

const { slug, lang } = Astro.params;
import { createServerClientAstro } from '../../../../lib/createServerClient.ts';

const supabase = createServerClientAstro(Astro.cookies);

const [
  { data: { user }, error: userError },
  { data: article, error: articleError },
] = await Promise.all([
  supabase.auth.getUser(),
  supabase
    .from("articles")
    .select("*")
    .eq("slug", slug)
    .eq("lang", lang || 'el')
    .maybeSingle(),
]);

if (articleError) {
  return new Response(`❌ Σφάλμα Supabase: ${articleError.message}`, { status: 500 });
}

if (!article) {
  return new Response(`📭 Δεν βρέθηκε άρθρο με slug: ${slug}`, { status: 404 });
}

if (!user) {
  return new Response('🔒 Απαιτείται είσοδος', { status: 401 });
}

// ΔΙΟΡΘΩΣΗ ΗΜΕΡΟΜΗΝΙΑΣ για input type="datetime-local"
function getLocalDatetimeString(dateStr) {
  if (!dateStr) return "";
  if (/^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}$/.test(dateStr)) {
    return dateStr;
  }
  try {
    const d = new Date(dateStr);
    const y = d.getFullYear();
    const m = String(d.getMonth() + 1).padStart(2, "0");
    const da = String(d.getDate()).padStart(2, "0");
    const h = String(d.getHours()).padStart(2, "0");
    const mi = String(d.getMinutes()).padStart(2, "0");
    return `${y}-${m}-${da}T${h}:${mi}`;
  } catch {
    return "";
  }
}
const fixedArticle = {
  ...article,
  publish_date: getLocalDatetimeString(article.publish_date),
};
---

<Layout title={fixedArticle?.title ? `Επεξεργασία: ${fixedArticle.title}` : "Επεξεργασία άρθρου"} lang={lang} user={user}>
  <EditorPage user={user} article={fixedArticle} />
</Layout>
