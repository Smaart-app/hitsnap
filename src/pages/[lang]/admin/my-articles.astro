---
import Layout from '@layouts/Layout.astro';
import ArticleCard from '@components/ArticleCard.jsx';
import { createServerClientAstro } from '@lib/createServerClient.ts';

export const prerender = false;

export async function getStaticPaths() {
  return [
    { params: { lang: 'el' } },
    { params: { lang: 'en' } },
  ];
}

const { lang } = Astro.params;
const supabase = createServerClientAstro(Astro.cookies);

// Έλεγχος αυθεντικοποίησης
const {
  data: { user },
} = await supabase.auth.getUser();

if (!user) {
  return Astro.redirect(`/${lang}/login`);
}

const { data: articles, error } = await supabase
  .from('articles')
  .select('*')
  .eq('lang', lang)
  .eq('user_id', user.id)
  .order('publish_date', { ascending: false });

const pageTitle = lang === 'en' ? 'Articles | hitsnap' : 'Άρθρα | hitsnap';
const pageDesc =
  lang === 'en'
    ? 'Explore the latest articles from hitsnap about real estate, strategy and clarity.'
    : 'Δες τα τελευταία άρθρα της hitsnap για ακίνητα, στρατηγική και καθαρή σκέψη.';
---

<Layout title={pageTitle} lang={lang}>
  <head slot="head">
    <meta charset="UTF-8" />
    <meta name="description" content={pageDesc} />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={pageDesc} />
    <meta property="og:type" content="website" />
    <meta property="og:image" content="/preview-image.png" />
    <title>{pageTitle}</title>
  </head>

  <main class="max-w-6xl mx-auto px-4 py-16">
    <h1 class="text-3xl font-bold text-center mb-10">
      {lang === 'en' ? 'Articles' : 'Άρθρα'}
    </h1>

    {error ? (
      <p class="text-red-500 text-center">⚠️ {error.message}</p>
    ) : articles.length === 0 ? (
      <p class="text-center text-zinc-500">
        {lang === 'en'
          ? 'No articles found.'
          : 'Δεν υπάρχουν άρθρα προς εμφάνιση.'}
      </p>
    ) : (
      <section class="grid gap-12 grid-cols-1 md:grid-cols-2 lg:grid-cols-3">
        {articles.map((article) => {
          const altLang = lang === 'el' ? 'en' : 'el';
          const altHref = `/${altLang}/blog/${article.slug}`;
          return (
            <ArticleCard
              client:load
              title={article.title}
              excerpt={article.excerpt}
              image={article.cover_image}
              href={`/${lang}/blog/${article.slug}`}
              lang={lang}
              altHref={altHref}
              status={
                article.published
                  ? new Date(article.publish_date) > new Date()
                    ? 'scheduled'
                    : 'published'
                  : 'draft'
              }
            />
          );
        })}
      </section>
    )}
  </main>
</Layout>
