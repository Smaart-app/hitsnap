---
import Layout from '../../../layouts/Layout.astro';
import { createServerClient } from '@supabase/ssr';
import { redirect } from 'astro/runtime/server';
import { marked } from 'marked';

const lang = Astro.params.lang || 'el';
const isGreek = lang === 'el';
const today = new Date().toISOString().split('T')[0];

const supabase = createServerClient(
  import.meta.env.PUBLIC_SUPABASE_URL,
  import.meta.env.PUBLIC_SUPABASE_ANON_KEY,
  { cookies: Astro.cookies }
);

const {
  data: { user }
} = await supabase.auth.getUser();

if (!user) {
  return redirect('/login');
}

let message = null;

if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();

  const slug = formData.get('slug')?.trim();
  const title = formData.get('title')?.trim();
  const content = formData.get('content')?.trim();
  const excerpt = formData.get('excerpt')?.trim();
  const articleLang = formData.get('lang');
  const published = formData.get('published') === 'true';
  const publish_date = formData.get('publish_date') || today;
  const cover_image = formData.get('cover_image')?.trim();
  const translation_of = formData.get('translation_of')?.trim() || null;

  const { data: existing } = await supabase
    .from('articles')
    .select('id')
    .eq('slug', slug)
    .eq('lang', articleLang);

  if (existing.length > 0) {
    message = { type: 'error', text: isGreek ? 'Το slug χρησιμοποιείται ήδη.' : 'Slug already exists.' };
  } else {
    const { error } = await supabase.from('articles').insert({
      slug,
      title,
      content,
      excerpt,
      lang: articleLang,
      published,
      publish_date,
      cover_image,
      translation_of
    });

    message = error
      ? { type: 'error', text: isGreek ? 'Αποτυχία αποθήκευσης.' : 'Failed to save article.' }
      : { type: 'success', text: isGreek ? '✅ Το άρθρο αποθηκεύτηκε!' : '✅ Article saved successfully!' };
  }
}
---

<Layout title={isGreek ? 'Δημιουργία Άρθρου | Hitlift' : 'Create Article | Hitlift'} lang={lang}>
  <main class="max-w-6xl mx-auto px-4 py-12">
    <a href={`/${lang}/blog`} class="inline-block text-sm text-[#50c7c2] hover:underline mb-4">
      ← {isGreek ? 'Επιστροφή στα άρθρα' : 'Back to blog'}
    </a>

    <h1 class="text-2xl font-bold mb-6">{isGreek ? '📝 Δημιουργία Άρθρου' : '📝 Create New Article'}</h1>

    {message && (
      <div class={`p-3 rounded font-semibold mb-6 ${message.type === 'success' ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'}`}>
        {message.text}
      </div>
    )}

    <div class="grid lg:grid-cols-2 gap-8">
      <!-- FORM -->
      <form method="POST" class="space-y-4">
        <div>
          <label class="block mb-1 font-semibold">Slug (URL)</label>
          <input type="text" name="slug" class="w-full p-2 border rounded" placeholder="my-first-article" required />
        </div>

        <div>
          <label class="block mb-1 font-semibold">{isGreek ? 'Τίτλος' : 'Title'}</label>
          <input type="text" name="title" class="w-full p-2 border rounded" required />
        </div>

        <div>
          <label class="block mb-1 font-semibold">{isGreek ? 'Γλώσσα' : 'Language'}</label>
          <select name="lang" class="w-full p-2 border rounded" required>
            <option value="el" selected={lang === 'el'}>🇬🇷 Ελληνικά</option>
            <option value="en" selected={lang === 'en'}>🇬🇧 English</option>
            <option value="nl">🇳🇱 Nederlands</option>
            <option value="fr">🇫🇷 Français</option>
            <option value="de">🇩🇪 Deutsch</option>
          </select>
        </div>

        <div>
          <label class="block mb-1 font-semibold">Translation of (article ID)</label>
          <input type="text" name="translation_of" class="w-full p-2 border rounded" placeholder="(Optional - link translations)" />
        </div>

        <div>
          <label class="block mb-1 font-semibold">{isGreek ? 'Απόσπασμα' : 'Excerpt'}</label>
          <textarea name="excerpt" maxlength="160" rows="3" class="w-full p-2 border rounded" placeholder={isGreek ? 'Προαιρετικό απόσπασμα...' : 'Optional excerpt...'}></textarea>
        </div>

        <div>
          <label class="block mb-1 font-semibold">{isGreek ? 'Πλήρες Κείμενο (Markdown)' : 'Full Text (Markdown)'}</label>
          <textarea name="content" id="markdownInput" rows="12" class="w-full p-2 border rounded font-mono text-sm" placeholder="Write using Markdown..." required></textarea>
        </div>

        <div>
          <label class="block mb-1 font-semibold">{isGreek ? 'Εικόνα Εξωφύλλου (URL)' : 'Cover Image (URL)'}</label>
          <input type="url" name="cover_image" class="w-full p-2 border rounded" />
        </div>

        <div class="flex items-center justify-between gap-4">
          <div class="w-full">
            <label class="block mb-1 font-semibold">{isGreek ? 'Ημερομηνία Δημοσίευσης' : 'Publish Date'}</label>
            <input type="date" name="publish_date" class="w-full p-2 border rounded" value={today} />
          </div>

          <div class="w-full">
            <label class="block mb-1 font-semibold">{isGreek ? 'Δημοσιευμένο' : 'Published'}</label>
            <select name="published" class="w-full p-2 border rounded">
              <option value="true">{isGreek ? 'Ναι' : 'Yes'}</option>
              <option value="false">{isGreek ? 'Όχι' : 'No'}</option>
            </select>
          </div>
        </div>

        <div class="flex justify-between items-center mt-4">
          <button type="submit" class="bg-[#50c7c2] text-white px-6 py-2 rounded hover:bg-[#3db2b0] transition font-semibold">
            {isGreek ? 'Αποθήκευση' : 'Save'}
          </button>
          <button type="button" id="translateBtn" class="text-sm text-[#50c7c2] hover:underline">
            {isGreek ? '➤ Μετάφρασε στα Αγγλικά' : '➤ Translate to Greek'}
          </button>
        </div>
      </form>

      <!-- LIVE PREVIEW -->
      <section class="prose prose-zinc dark:prose-invert p-4 border rounded shadow-sm overflow-auto max-h-[800px]">
        <h2 class="text-xl font-bold mb-2">{isGreek ? 'Προεπισκόπηση' : 'Preview'}</h2>
        <div id="markdownPreview" class="text-sm text-zinc-800 dark:text-zinc-200"></div>
      </section>
    </div>
  </main>

  <script type="module">
    import { marked } from 'marked';

    const input = document.getElementById('markdownInput');
    const preview = document.getElementById('markdownPreview');

    const renderPreview = () => {
      preview.innerHTML = marked.parse(input.value || '');
    };

    input.addEventListener('input', renderPreview);
    renderPreview();
  </script>
</Layout>
