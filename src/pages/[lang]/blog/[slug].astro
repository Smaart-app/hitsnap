---
import Layout from '../../../layouts/Layout.astro';
import Markdown from '../../../components/Markdown.astro';
import { createServerClientAstro } from '../../../lib/createServerClientAstro';

export const prerender = false;
export const client = 'load';

const { slug, lang } = Astro.params;

// Validation: Ensure required params exist
if (!slug || !lang) {
  return new Response(null, {
    status: 404,
    statusText: 'Invalid parameters'
  });
}

const supabase = createServerClientAstro(Astro.cookies);

const {
  data: { user },
} = await supabase.auth.getUser();

const { data: articles } = await supabase
  .from('articles')
  .select('*')
  .eq('slug', slug)
  .eq('lang', lang)
  .limit(1);

let article = articles?.[0];

if (!article) {
  const altLang = lang === 'el' ? 'en' : 'el';

  const { data: altArticles } = await supabase
    .from('articles')
    .select('slug')
    .eq('slug', slug)
    .eq('lang', altLang)
    .eq('published', true)
    .limit(1);

  const alt = altArticles?.[0];

  if (alt && alt.slug === slug) {
    return Astro.redirect(`/${altLang}/blog/${alt.slug}`, 302);
  }

  return Astro.redirect(`/${lang}/blog`, 302);
}

let altArticle = null;

if (article) {
  const altLang = lang === 'el' ? 'en' : 'el';
  const groupId = article.translation_of || article.id;

  const { data: altArticles } = await supabase
    .from('articles')
    .select('slug, lang')
    .or(`id.eq.${groupId},translation_of.eq.${groupId}`)
    .eq('lang', altLang)
    .eq('published', true)
    .limit(1);

  altArticle = altArticles?.[0];
}

const hasAltVersion = !!altArticle;

const pageTitle = article?.title ?? 'Unknown Article';
const pageDescription = article?.excerpt ?? 'This article may have been moved or never existed.';
const siteUrl = import.meta.env.PUBLIC_SITE_URL || 'https://hitsnap.app';
const pageUrl = `${siteUrl}/${lang}/blog/${slug}`;
const markdown = article?.content ?? '';
---

<Layout
  title={pageTitle}
  lang={lang}
  key={lang}
  altArticle={altArticle}
  disableHeaderLangSwitch={true}
>
  <head slot="head">
    <title>{pageTitle}</title>
    <meta name="description" content={pageDescription} />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={pageDescription} />
    <meta property="og:type" content="article" />
    <meta property="og:url" content={pageUrl} />
    <meta name="language" content={lang === 'el' ? 'Greek' : 'English'} />
  </head>

  <section class="max-w-3xl mx-auto py-12 px-4">
    <article>
      <h1 class="text-2xl sm:text-3xl font-bold text-black"
          style="font-family: 'Playfair Display', serif;">
        {article.title}
      </h1>

      {article.publish_date && (
        <p class="text-sm text-zinc-500">
          {new Date(article.publish_date).toLocaleDateString(lang === "en" ? "en" : "el")}
        </p>
      )}

      {article.cover_image && (
        <img
          src={article.cover_image}
          alt="Cover image"
          class="my-6 max-h-[400px] w-auto max-w-full object-contain rounded-lg shadow"
        />
      )}

      <div class="prose prose-zinc dark:prose-invert max-w-none">
        <Markdown content={markdown} />
      </div>
    </article>

    {hasAltVersion && (
      <div class="text-right mt-10 text-sm">
        <a
          class="text-[#50c7c2] hover:underline"
          href={`/${altArticle.lang}/blog/${altArticle.slug}`}
          target="_self"
          data-force-reload
        >
          {lang === 'el' ? 'Διαθέσιμο και στα Αγγλικά →' : 'Also available in Greek →'}
        </a>
      </div>
    )}

    <div class="mt-12 text-center mb-8">
      <a href={`/${lang}/blog`} class="inline-block text-[#50c7c2] hover:underline">
        ← {lang === 'el' ? 'Επιστροφή στα άρθρα' : 'Back to blog'}
      </a>
    </div>

    {user && article && (
      <div class="text-center">
        <a
          href={`/${article.lang}/admin/edit/${article.slug}`}
          class="inline-block bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition"
        >
          ✏️ {lang === 'el' ? 'Επεξεργασία' : 'Edit'}
        </a>
      </div>
    )}
  </section>
</Layout>
