---
import Layout from '../../../layouts/Layout.astro';
import Markdown from '../../../components/Markdown.astro';
import { createServerClient } from '@supabase/ssr';

export const client = 'load';
export const prerender = false;

const { slug, lang } = Astro.params;

const supabase = createServerClient(
  import.meta.env.PUBLIC_SUPABASE_URL,
  import.meta.env.PUBLIC_SUPABASE_ANON_KEY,
  { cookies: Astro.cookies }
);

// 🔍 Φέρνουμε το άρθρο στην τρέχουσα γλώσσα
const { data: articles } = await supabase
  .from('articles')
  .select('*')
  .eq('slug', slug)
  .eq('lang', lang)
  .limit(1);

let article = articles?.[0];

// 🔁 Αν δεν βρέθηκε, ψάξε μήπως υπάρχει σε άλλη γλώσσα και κάνε redirect
if (!article) {
  const altLang = lang === 'el' ? 'en' : 'el';

  const { data: altArticles } = await supabase
    .from('articles')
    .select('slug')
    .eq('slug', slug)
    .eq('lang', altLang)
    .eq('published', true)
    .limit(1);

  const alt = altArticles?.[0];

  if (alt && alt.slug !== slug) {
    return Astro.redirect(`/${altLang}/blog/${alt.slug}`, 302);
  }

  // ✅ Αν ούτε το alt υπάρχει, γύρνα στο /blog για τη γλώσσα
  return Astro.redirect(`/${lang}/blog`, 302);
}

let altArticle = null;

if (article) {
  const altLang = lang === 'el' ? 'en' : 'el';
  const groupId = article.translation_of || article.id;

  const { data: altArticles } = await supabase
    .from('articles')
    .select('slug, lang')
    .or(`id.eq.${groupId},translation_of.eq.${groupId}`)
    .eq('lang', altLang)
    .eq('published', true)
    .limit(1);

  altArticle = altArticles?.[0];
}

const hasAltVersion = !!altArticle;

const pageTitle = article?.title ?? 'Unknown Article';
const pageDescription = article?.excerpt ?? 'This article may have been moved or never existed.';
const pageUrl = `https://hitlift.gr/${lang}/blog/${slug}`;
const markdown = article?.content ?? '';
---

<Layout
  title={pageTitle}
  lang={lang}
  key={lang}
  altArticle={altArticle}
  disableHeaderLangSwitch={true}
>
  <head slot="head">
    <title>{pageTitle}</title>
    <meta name="description" content={pageDescription} />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={pageDescription} />
    <meta property="og:type" content="article" />
    <meta property="og:url" content={pageUrl} />
    <meta name="language" content={lang === 'el' ? 'Greek' : 'English'} />
  </head>

  <section class="max-w-3xl mx-auto py-12 px-4">
    <article class="prose prose-zinc dark:prose-invert max-w-none">
      <h1>{article.title}</h1>

      {article.publish_date && (
        <p class="text-sm text-zinc-500">
          {new Date(article.publish_date).toLocaleDateString(lang === "en" ? "en-GB" : "el-GR")}
        </p>
      )}

      {article.cover_image && (
        <img
          src={article.cover_image}
          alt="Cover image"
          class="my-6 max-h-[400px] w-auto max-w-full object-contain rounded-lg shadow"
        />
      )}

      <Markdown content={markdown} />
    </article>

    {hasAltVersion && (
      <div class="text-right mt-10 text-sm">
        <a
          class="text-[#50c7c2] hover:underline"
          href={`/${altArticle.lang}/blog/${altArticle.slug}`}
          target="_self"
          data-force-reload
        >
          {lang === 'el' ? 'Διαθέσιμο και στα Αγγλικά →' : 'Also available in Greek →'}
        </a>
      </div>
    )}

    <div class="mt-12 text-center mb-24">
      <a href={`/${lang}/blog`} class="inline-block text-[#50c7c2] hover:underline">
        ← {lang === 'el' ? 'Επιστροφή στα άρθρα' : 'Back to blog'}
      </a>
    </div>

    <details class="mt-8 bg-zinc-100 text-xs p-4 rounded shadow text-black">
      <summary class="cursor-pointer">🛠 View raw article data</summary>
      <pre class="overflow-auto whitespace-pre-wrap">{JSON.stringify(article, null, 2)}</pre>
    </details>
  </section>
</Layout>
