---
import Layout from '../../../layouts/Layout.astro';
import Markdown from '../../../components/Markdown.astro';
import { createServerClientWithCookies } from '../../../lib/createServerClient.ts';

export const prerender = false;

const { slug } = Astro.params;
const supabase = createServerClientWithCookies(Astro.cookies);

const {
  data: { user },
} = await supabase.auth.getUser();

let article = null;
let error = null;

if (user) {
  const { data, error: fetchError } = await supabase
    .from('articles')
    .select('*')
    .eq('slug', slug)
    .eq('user_id', user.id) // ✅ μόνο τα άρθρα σου
    .limit(1);

  article = data?.[0] ?? null;
  error = fetchError;
} else {
  error = { message: 'Not authenticated' };
}

function getStatus(article) {
  if (!article?.published) return 'draft';
  if (new Date(article.publish_date) > new Date()) return 'scheduled';
  return 'published';
}
---

<Layout title={article?.title || 'Preview'}>
  <main class="max-w-3xl mx-auto px-4 py-16">
    {error ? (
      <p class="text-red-600 text-center text-lg font-semibold">
        ⚠️ Σφάλμα: {error.message}
      </p>
    ) : article ? (
      <>
        <h1 class="text-3xl font-bold mb-4">{article.title}</h1>
        <p class="text-zinc-500 text-sm mb-3">
          🗓️ {new Date(article.publish_date).toLocaleString('el-GR')} | 🏷️ {article.lang?.toUpperCase()}
        </p>
        <p class="text-sm font-semibold mb-6">
          📌 Κατάσταση:{' '}
          {getStatus(article) === 'draft' && '📝 Πρόχειρο'}
          {getStatus(article) === 'scheduled' && '⏳ Προγραμματισμένο'}
          {getStatus(article) === 'published' && '✅ Δημοσιευμένο'}
        </p>
        {article.cover_image && (
          <img
            src={article.cover_image}
            alt="Cover"
            class="rounded-lg mb-6 w-full max-h-[400px] object-cover"
          />
        )}
        <Markdown content={article.content} />
      </>
    ) : (
      <p class="text-center text-red-500 font-semibold">❌ Το άρθρο δεν βρέθηκε.</p>
    )}
  </main>
</Layout>