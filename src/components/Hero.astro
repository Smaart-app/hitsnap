---
import { t, type Lang } from '@/lib/i18n';

/**
 * Hero.astro — EN/NL/EL hero με ασφαλές fallback και i18n.
 * Προσπαθεί να φορτώσει hero από Supabase (αν υπάρχει PUBLIC_SUPABASE_URL),
 * αλλιώς δείχνει τον Πιερότο από /public/article-images/.
 */

const lang = ((Astro.props?.lang ?? 'en') as Lang).toLowerCase() as Lang;
const L = t(lang);

// Fallback τοπικής εικόνας
const FALLBACK = '/article-images/pierrot-moment-snap.png';

// Αν υπάρχει Supabase URL, δοκίμασε public bucket
const supa = import.meta.env.PUBLIC_SUPABASE_URL || import.meta.env.SUPABASE_URL || '';
const HERO_URL = supa
  ? `${supa}/storage/v1/object/public/site_assets/hero/hero.jpg`
  : FALLBACK;

// Cache-bust για να μην «κολλάει» παλιά έκδοση του hero
const cacheBust = Date.now();

// Τελικές τιμές (props έχουν προτεραιότητα)
const title    = Astro.props?.title    ?? L.hero.title;
const subtitle = Astro.props?.subtitle ?? L.hero.subtitle;
const ctaText  = Astro.props?.ctaText  ?? L.hero.cta;
const fallback = Astro.props?.fallback ?? FALLBACK;
const imageSrc = Astro.props?.imageSrc ?? (supa ? `${HERO_URL}?v=${cacheBust}` : fallback);

// Base path ανά γλώσσα
const base = lang === 'el' ? '/el' : (lang === 'nl' ? '/nl' : '/en');
const ctaHref = Astro.props?.ctaHref ?? `${base}/gallery`;

// helper για να χρωματίζουμε τη 2η λέξη
function splitTitle(t: string) {
  const parts = t.trim().split(/\s+/);
  if (parts.length < 2) return { first: t, second: '' };
  return { first: parts[0], second: t.slice(parts[0].length + 1) };
}
const { first, second } = splitTitle(title);
---

<section class="relative w-full overflow-hidden bg-black">
  <div class="max-w-screen-xl mx-auto grid grid-cols-1 md:grid-cols-2 items-stretch min-h-[480px] md:min-h-[560px] lg:min-h-[620px]">
    <!-- Left: Copy -->
    <div class="relative flex items-center">
      <div class="absolute inset-0 md:inset-y-0 md:-left-10 md:w-[120%] bg-gradient-to-r from-black via-black/80 to-transparent pointer-events-none"></div>

      <div class="relative z-10 px-5 sm:px-8 md:px-10 py-12 md:py-20">
        <h1 class="text-white leading-tight font-bold tracking-tight text-4xl md:text-5xl lg:text-6xl">
          {first}{second && ' '}<span class="text-[#50c7c2]">{second}</span>
        </h1>

        {subtitle && (
          <p class="mt-4 md:mt-5 text-zinc-300 text-base md:text-lg max-w-[48ch] italic">
            {subtitle}
          </p>
        )}

        <div class="mt-7">
          <a href={ctaHref} class="inline-block bg-[#50c7c2] text-white px-6 py-3 rounded-full text-sm font-medium hover:opacity-90 active:opacity-80 transition">
            {ctaText}
          </a>
        </div>
      </div>
    </div>

    <!-- Right: Image -->
    <div class="relative">
      <div class="absolute inset-0">
        <img
          id="hero-img"
          src={imageSrc}
          alt="HitSnap preview hero"
          class="w-full h-full object-contain md:object-contain"
          loading="eager"
          decoding="async"
          data-fallback={fallback}
        />
      </div>
      <div class="absolute inset-y-0 right-0 w-12 md:w-24 bg-gradient-to-l from-black/20 to-transparent pointer-events-none"></div>
    </div>
  </div>
</section>

<script>
  // Ρητό runtime fallback: αν αποτύχει το Supabase URL → γύρνα στον Πιερότο
  (function () {
    const img = document.getElementById('hero-img');
    if (!img) return;
    const fallbackSrc = img.getAttribute('data-fallback');
    let applied = false;

    function applyFallback() {
      if (applied || !fallbackSrc) return;
      applied = true;
      img.src = fallbackSrc + '?v=' + Date.now(); // σπάσε cache
    }

    // Fallback στο error
    img.addEventListener('error', applyFallback, { once: true });

    // Safety check για κενό/μη έγκυρο src στον πρώτο paint
    if (!img.complete || img.naturalWidth === 0) {
      setTimeout(() => {
        if (!img.complete || img.naturalWidth === 0) applyFallback();
      }, 800);
    }
  })();
</script>
