---
import '../styles/global.css';

const title = Astro.props?.title || 'Hitlift';
let lang = Astro.props?.lang;

import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { createServerClientReadOnly } from '../lib/createServerClient';

let user = null;

// Αν το prop lang λείπει, πάρε από το URL
if (!lang && Astro.url) {
  const match = Astro.url.pathname.match(/^\/(\w+)\//);
  lang = match ? match[1] : 'el';
}

// === ΕΔΩ ΒΑΖΩ ΤΟ DEBUG ===
console.log('SSR sees cookies:', Astro.cookies);

try {
  const supabase = createServerClientReadOnly(Astro.cookies);
  const result = await supabase.auth.getSession();
  user = result.session?.user || null;
} catch (err) {
  user = null;
}
---

<html lang={lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{title}</title>

    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    <link rel="manifest" href="/site.webmanifest" />

    <link
      href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&display=swap"
      rel="stylesheet"
    />

    <slot name="head" />
  </head>

  <body class="bg-[#f4f3f0] text-[#1a1a1a] leading-relaxed relative overflow-x-visible min-h-screen">

    <!-- DEBUG PANEL -->
    <div style="position: fixed; top: 50px; right: 0; background: blue; color: white; padding: 5px; z-index: 9999; font-size: 12px;">
      Layout User: {user ? user.email || 'Logged in' : 'Not logged in'}
    </div>

    <Header lang={lang} user={user} />

    <main class="relative z-10">
      <div class="container">
        <slot />
      </div>
    </main>

    <Footer lang={lang} />

    <!-- ΜΟΝΟ theme script -->
    <script is:client>
      const html = document.documentElement;

      if (
        localStorage.getItem('theme') === 'dark' ||
        (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches)
      ) {
        html.classList.add('dark');
      }

      document.addEventListener('DOMContentLoaded', () => {
        document.getElementById('toggle-theme')?.addEventListener('click', () => {
          html.classList.toggle('dark');
          localStorage.setItem('theme', html.classList.contains('dark') ? 'dark' : 'light');
        });
      });
    </script>
  </body>
</html>